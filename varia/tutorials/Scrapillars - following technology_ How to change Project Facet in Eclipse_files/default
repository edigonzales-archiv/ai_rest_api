// API callback
RecentPostsScrollerv2({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-3334607182569568968"},"updated":{"$t":"2015-12-25T22:42:20.236-08:00"},"category":[{"term":"J2ee project"},{"term":"AWS"},{"term":"Ajax"},{"term":"Amazon"},{"term":"Amazons3 client"},{"term":"Code Snippets"},{"term":"Eclipse"},{"term":"Project Facet"},{"term":"Select boxes"},{"term":"Server"},{"term":"dynamic drop down lists"},{"term":"java"}],"title":{"type":"text","$t":"Scrapillars - following technology"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/scrapillars.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default?alt=json-in-script\u0026max-results=6"},{"rel":"alternate","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default?alt=json-in-script\u0026start-index=7\u0026max-results=6"}],"author":[{"name":{"$t":"pandu Brains"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"16"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"6"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-3334607182569568968.post-782473510040670461"},"published":{"$t":"2014-04-17T00:47:00.001-07:00"},"updated":{"$t":"2014-05-08T03:20:49.991-07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Amazon"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Amazons3 client"},{"scheme":"http://www.blogger.com/atom/ns#","term":"AWS"},{"scheme":"http://www.blogger.com/atom/ns#","term":"J2ee project"},{"scheme":"http://www.blogger.com/atom/ns#","term":"java"}],"title":{"type":"text","$t":"How to get the AmazonS3 client object in java"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003EIt is very important to know and understand the API's provided from AWS.\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EAWS has provided some API's to connect to it's S3 bucket. We will using this to get the connection to amazon s3.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EBelow is direct code snippet which will give the created amazon s3 client object.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003Epublic AmazonS3 getAWSClient() {\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003EAmazonS3 s3Client\u0026nbsp;= null;\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003EBasicAWSCredentials awsCredential = new BasicAWSCredentials(\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E    \u003C\/span\u003E\"ACCESS KEY\", \"SECRET ACCESS KEY\");\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003EClientConfiguration clientConfig = new ClientConfiguration();\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003EclientConfig.setProtocol(Protocol.HTTPS);\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003Es3Client = new AmazonS3Client(awsCredential, clientConfig);\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003Ereturn s3Client;\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E \u003C\/span\u003E}\u0026nbsp;\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/scrapillars.blogspot.com\/feeds\/782473510040670461\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/how-to-get-amazons3-client-object-in.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/782473510040670461"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/782473510040670461"},{"rel":"alternate","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/how-to-get-amazons3-client-object-in.html","title":"How to get the AmazonS3 client object in java"}],"author":[{"name":{"$t":"pandu Brains"},"uri":{"$t":"https:\/\/plus.google.com\/116694047145069054119"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-3334607182569568968.post-7700857947614209477"},"published":{"$t":"2014-04-06T22:26:00.002-07:00"},"updated":{"$t":"2014-04-06T22:29:06.945-07:00"},"title":{"type":"text","$t":"How to change the project facet Dynamic web module in eclipse"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003EHere is another post on changing the dynamic web module version inside eclipse.\u003Cbr \/\u003EThis is very easy to change the version of the facet in eclipse. \u003Cbr \/\u003E\u003Cbr \/\u003EThe steps to change the version is as follows:\u003Cbr \/\u003E\u003Cbr \/\u003E1) Right click on project and select properties\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-uA655AU7kCk\/U0I2QXvAYMI\/AAAAAAAAACM\/_qEcREZo48M\/s1600\/projectfacet0.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-uA655AU7kCk\/U0I2QXvAYMI\/AAAAAAAAACM\/_qEcREZo48M\/s1600\/projectfacet0.png\" height=\"400\" width=\"226\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E2) Click on Project Facets in properties tab. Inside project facet window there is an option\u0026nbsp; for check-box selection for Dynamic Web Module version.\u003Cbr \/\u003E\u0026nbsp;\u0026nbsp; \u003Cbr \/\u003E\u0026nbsp;\u0026nbsp; a) First Un-check the check-box\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-GXTsTiGBqpk\/U0I2r1ossoI\/AAAAAAAAACQ\/O4KTtNNWeDE\/s1600\/project+facet1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-GXTsTiGBqpk\/U0I2r1ossoI\/AAAAAAAAACQ\/O4KTtNNWeDE\/s1600\/project+facet1.png\" height=\"223\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u0026nbsp;\u0026nbsp; b) Now change the version as per the requirement. Click on apply and Ok.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-zIqid325kl4\/U0I2zVk2UtI\/AAAAAAAAACY\/ryUC7ijA0vg\/s1600\/project+facet2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-zIqid325kl4\/U0I2zVk2UtI\/AAAAAAAAACY\/ryUC7ijA0vg\/s1600\/project+facet2.png\" height=\"223\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ENow the project facet dynamic web module is changed to required version. \u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/scrapillars.blogspot.com\/feeds\/7700857947614209477\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/how-to-change-project-facet-dynamic-web.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/7700857947614209477"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/7700857947614209477"},{"rel":"alternate","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/how-to-change-project-facet-dynamic-web.html","title":"How to change the project facet Dynamic web module in eclipse"}],"author":[{"name":{"$t":"pandu Brains"},"uri":{"$t":"https:\/\/plus.google.com\/116694047145069054119"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-uA655AU7kCk\/U0I2QXvAYMI\/AAAAAAAAACM\/_qEcREZo48M\/s72-c\/projectfacet0.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-3334607182569568968.post-1132680150858951998"},"published":{"$t":"2014-04-05T23:34:00.001-07:00"},"updated":{"$t":"2014-04-05T23:34:15.950-07:00"},"title":{"type":"text","$t":"Spring Context Configuration for Database connection"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cb\u003EDefining Spring context configuration for database connection\u003C\/b\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003EThis post helps in understanding the database configuration in spring in the form of bean.\u003Cbr \/\u003EThe code snippet for this configuration is as below.\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\"\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; destroy-method=\"close\"\u0026gt;\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026lt;property name=\"driverClassName\" value=\"${driverClassName}\" \/\u0026gt;\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026lt;property name=\"url\" value=\"${url}\" \/\u0026gt;\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026lt;property name=\"username\" value=\"${username}\" \/\u0026gt;\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026lt;property name=\"password\" value=\"${password}\" \/\u0026gt;\u003Cbr \/\u003E\u0026lt;\/bean\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003ESome of the property values are configured in properties file.\u003Cbr \/\u003E\u003Cbr \/\u003EThe code snippet for properties file is as below.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003Ejdbc.properties\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EdriverClassName=com.mysql.jdbc.Driver\u003Cbr \/\u003Eurl=jdbc:mysql:\/\/localhost:3306\/database_name\u003Cbr \/\u003Eusername=admin\u003Cbr \/\u003Epassword=admin\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/scrapillars.blogspot.com\/feeds\/1132680150858951998\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/spring-context-configuration-for.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/1132680150858951998"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/1132680150858951998"},{"rel":"alternate","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/spring-context-configuration-for.html","title":"Spring Context Configuration for Database connection"}],"author":[{"name":{"$t":"pandu Brains"},"uri":{"$t":"https:\/\/plus.google.com\/116694047145069054119"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-3334607182569568968.post-8177925257194322246"},"published":{"$t":"2014-04-05T23:28:00.002-07:00"},"updated":{"$t":"2014-04-05T23:31:05.333-07:00"},"title":{"type":"text","$t":"Simple JDBC Connection in java"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cb\u003ESimple JDBC Connection code in java\u003C\/b\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003EThis post is to get the simple JDBC connection in java.\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026nbsp;\/\/ JDBC driver name and database URL\u003Cbr \/\u003Estatic final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\"; \u003Cbr \/\u003Estatic final String DB_URL = \"jdbc:mysql:\/\/localhost:3306\/DataBase_Name\";\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ \u0026nbsp;Database credentials\u003Cbr \/\u003Estatic final String USER = \"admin\";\u003Cbr \/\u003Estatic final String PASS = \"admin\";\u003Cbr \/\u003Epublic Connection conn = null;\u003Cbr \/\u003E\u003Cbr \/\u003E\/**\u003Cbr \/\u003E\u0026nbsp;* \u0026nbsp; This Method will return the Database Connection\u003Cbr \/\u003E\u0026nbsp;*\/\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E \u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E \u003C\/span\u003E\u003Cbr \/\u003Epublic Connection getDbConnection()\u003Cbr \/\u003E{\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E\u0026nbsp;\u003C\/span\u003E\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; try{\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E           \u003C\/span\u003EClass.forName(JDBC_DRIVER);\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E           \u003C\/span\u003Econn = DriverManager.getConnection(DB_URL,USER,PASS);\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E   \u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E    \u003C\/span\u003E}\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E    \u003C\/span\u003Ecatch (ClassNotFoundException e) {\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E           \u003C\/span\u003Ee.printStackTrace();\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E    \u003C\/span\u003E}\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E   \u003C\/span\u003Ecatch(SQLException se){\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; }\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E \u003C\/span\u003Ereturn conn;\u003Cspan class=\"Apple-tab-span\" style=\"white-space: pre;\"\u003E  \u003C\/span\u003E\u003Cbr \/\u003E}\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/scrapillars.blogspot.com\/feeds\/8177925257194322246\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/simple-jdbc-connection-in-java.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/8177925257194322246"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/8177925257194322246"},{"rel":"alternate","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/simple-jdbc-connection-in-java.html","title":"Simple JDBC Connection in java"}],"author":[{"name":{"$t":"pandu Brains"},"uri":{"$t":"https:\/\/plus.google.com\/116694047145069054119"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-3334607182569568968.post-4072889038704743015"},"published":{"$t":"2014-04-05T23:24:00.005-07:00"},"updated":{"$t":"2014-04-05T23:24:46.780-07:00"},"title":{"type":"text","$t":"Split String depending on delimiter in java"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cb\u003ETo Split a String with delimiter condition and form an array of string\u003C\/b\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003EConsidering a scenario where in we have read a line from csv or xls file in the form of string and need to separate the columns in array of string depending on delimiters.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026nbsp;Below is the code snippet to achieve this problem..\u003Cbr \/\u003E\u003Cbr \/\u003E{\u003Cbr \/\u003E...\u003Cbr \/\u003E...\u003Cbr \/\u003EString line = new BufferedReader(new FileReader(\"your file\"));\u003Cbr \/\u003E\u003Cbr \/\u003EString[] splittedString = StringSplitToArray(stringLine,\"\\\"\");\u003Cbr \/\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic static String[] StringSplitToArray(String stringToSplit, String delimiter) {\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;StringBuffer token = new StringBuffer();\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;Vector tokens = new Vector();\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;char[] chars = stringToSplit.toCharArray();\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;for (int i=0; i \u0026nbsp;0) {\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;tokens.addElement(token.toString());\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;token.setLength(0);\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;i++;\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;}\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;} else {\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;token.append(chars[i]);\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;}\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;}\u0026lt;br \/\u0026gt;\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;if (token.length() \u0026amp;gt; 0) {\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;tokens.addElement(token.toString());\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;}\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\/\/ convert the vector into an array\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;String[] preparedArray = new String[tokens.size()];\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;for (int i=0; i \u0026amp;lt; preparedArray.length; i++) {\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;preparedArray[i] = (String)tokens.elementAt(i);\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;}\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;return preparedArray;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003EAbove code snippet contains method call to StringSplitToArray where in the method converts the stringline into string array splitting the line depending on the delimiter specified or passed to the method. Delimiter can be comma separator(,) or double code(\").\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/scrapillars.blogspot.com\/feeds\/4072889038704743015\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/split-string-depending-on-delimiter-in.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/4072889038704743015"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/4072889038704743015"},{"rel":"alternate","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/split-string-depending-on-delimiter-in.html","title":"Split String depending on delimiter in java"}],"author":[{"name":{"$t":"pandu Brains"},"uri":{"$t":"https:\/\/plus.google.com\/116694047145069054119"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-3334607182569568968.post-8846630277228648517"},"published":{"$t":"2014-04-05T23:02:00.000-07:00"},"updated":{"$t":"2014-04-05T23:57:57.066-07:00"},"title":{"type":"text","$t":"Read CSV File data and skip some rows from CSV file in java"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003ETo read the data from csv file need an opencsv.jar which helps in an easy way to read the csv file content which even contains data containing commas as well. Here is a simple example for reading the csv data which contains one of the columns containing comma (,) \u0026nbsp;in the data.\u003Cbr \/\u003E\u003Cbr \/\u003EOur example contains csvdata.csv file data as :\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-tyuybPzBUdw\/U0DxqXq3naI\/AAAAAAAAAB4\/lDqm2nyD4sg\/s1600\/xls+table.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-tyuybPzBUdw\/U0DxqXq3naI\/AAAAAAAAAB4\/lDqm2nyD4sg\/s1600\/xls+table.png\" height=\"100\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EOur aim is to read each row of the csv data and to skip some rows from the file.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Cu\u003EExample to Read data from CSV File :\u003C\/u\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EFor reading the csv data, opencsv jar is used in the project. The project structure looks like\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-Zqly5PGM44g\/U0Dvsxv18-I\/AAAAAAAAABs\/7IywXj49BS4\/s1600\/project+structure.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/3.bp.blogspot.com\/-Zqly5PGM44g\/U0Dvsxv18-I\/AAAAAAAAABs\/7IywXj49BS4\/s1600\/project+structure.png\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EThe project package contains two java files .\u003Cbr \/\u003E\u003Cbr \/\u003E1. CsvDataForm.java -\u0026gt; This file contains the form field variables or the columns from the csv file.\u003Cbr \/\u003E\u003Cbr \/\u003E2. CsvRead.java -\u0026gt; This file contains the main method which has reading columns from the csv file mapped to CsvDataForm.java\u003Cbr \/\u003E\u003Cbr \/\u003ETwo file looks like\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Cu\u003ECsvDataForm.java\u003C\/u\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003Epackage com.scrapillars.csv;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class CsvDataForm {\u003Cbr \/\u003E\u003Cbr \/\u003Eprivate String Department;\u003Cbr \/\u003E\u003Cbr \/\u003Eprivate String Employee;\u003Cbr \/\u003E\u003Cbr \/\u003Eprivate String Designation;\u003Cbr \/\u003E\u003Cbr \/\u003Eprivate String Salary;\u003Cbr \/\u003E\u003Cbr \/\u003Eprivate String Address;\u003Cbr \/\u003E\u003Cbr \/\u003Eprivate String Degree;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic String getDepartment() {\u003Cbr \/\u003Ereturn Department;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic void setDepartment(String department) {\u003Cbr \/\u003EDepartment = department;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic String getEmployee() {\u003Cbr \/\u003Ereturn Employee;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic void setEmployee(String employee) {\u003Cbr \/\u003EEmployee = employee;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic String getDesignation() {\u003Cbr \/\u003Ereturn Designation;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic void setDesignation(String designation) {\u003Cbr \/\u003EDesignation = designation;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic String getSalary() {\u003Cbr \/\u003Ereturn Salary;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic void setSalary(String salary) {\u003Cbr \/\u003ESalary = salary;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic String getAddress() {\u003Cbr \/\u003Ereturn Address;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic void setAddress(String address) {\u003Cbr \/\u003EAddress = address;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic String getDegree() {\u003Cbr \/\u003Ereturn Degree;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003Epublic void setDegree(String degree) {\u003Cbr \/\u003EDegree = degree;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Cu\u003ECsvRead.java\u003C\/u\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003Epackage com.scrapillars.csv;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.io.FileReader;\u003Cbr \/\u003Eimport java.io.IOException;\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003Eimport au.com.bytecode.opencsv.CSVReader;\u003Cbr \/\u003Eimport au.com.bytecode.opencsv.bean.ColumnPositionMappingStrategy;\u003Cbr \/\u003Eimport au.com.bytecode.opencsv.bean.CsvToBean;\u003Cbr \/\u003Eimport com.scrapillars.csv.CsvDataForm;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class CsvRead {\u003Cbr \/\u003E\u003Cbr \/\u003Epublic static void main(String[] args) throws IOException {\u003Cbr \/\u003E\u003Cbr \/\u003ECSVReader reader = new CSVReader(new FileReader(\"E:\/csvdata.csv\"), ',','\\\"', 1);\u003Cbr \/\u003E\u003Cbr \/\u003EColumnPositionMappingStrategy cpms = new ColumnPositionMappingStrategy();\u003Cbr \/\u003Ecpms.setType(CsvDataForm.class);\u003Cbr \/\u003E\u003Cbr \/\u003EString[] columns = new String[] { \"Department\", \"Employee\", \"Designation\", \"Salary\", \"Address\",\"Degree\"};\u003Cbr \/\u003Ecpms.setColumnMapping(columns);\u003Cbr \/\u003ECsvToBean csvToBean = new CsvToBean();\u003Cbr \/\u003EList csvDataList = csvToBean.parse(cpms, reader);\u003Cbr \/\u003E\u003Cbr \/\u003Efor (CsvDataForm csvData : csvDataList) {\u003Cbr \/\u003E\u003Cbr \/\u003ESystem.out.println(\"Department : \" + csvData.getDepartment()\u003Cbr \/\u003E+ \"\\t Employee : \" + csvData.getEmployee()\u003Cbr \/\u003E+ \"\\t Designation : \" + csvData.getDesignation()\u003Cbr \/\u003E+ \"\\t Salary : \" + csvData.getSalary()\u003Cbr \/\u003E+ \"\\t Address : \" + csvData.getAddress()\u003Cbr \/\u003E+ \"\\t Degree : \" + csvData.getDegree()\u003Cbr \/\u003E);\u003Cbr \/\u003E}\u003Cbr \/\u003E}\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EPlace the csvdata.csv file in any of the drive and provide the path to CSVReader. In our example csvdata.csv file is placed in 'E' drive. Change the drive name accordingly.\u003Cbr \/\u003E\u003Cbr \/\u003EThe Output of the CsvRead.java after run looks like :\u003Cbr \/\u003E\u003Cbr \/\u003EDepartment : IT \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; Employee : JOHN \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;Designation : PROJECT LEAD \u0026nbsp; \u0026nbsp; \u0026nbsp; Salary : 10000$ \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; Address : Texas, USA \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;Degree : MASTERS\u003Cbr \/\u003EDepartment : IT \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; Employee : PETER \u0026nbsp; \u0026nbsp; \u0026nbsp;Designation : TEAM LEAD \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;Salary : 8000$ \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; Address : New York,USA \u0026nbsp; Degree : MASTERS\u003Cbr \/\u003E\u003Cbr \/\u003ECSVReader from opencsv jar contains constructor which takes FileReader, comma separator argument, double code(\"\") separator argument as to remove this separator from the data and an integer argument which tells number of rows to skip from csv file. If the requirement is to skip 2 rows while reading the data, then the value of the argument should be '2'.\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/scrapillars.blogspot.com\/feeds\/8846630277228648517\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/to-read-data-from-csv-file-need-opencsv.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/8846630277228648517"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3334607182569568968\/posts\/default\/8846630277228648517"},{"rel":"alternate","type":"text/html","href":"http:\/\/scrapillars.blogspot.com\/2014\/04\/to-read-data-from-csv-file-need-opencsv.html","title":"Read CSV File data and skip some rows from CSV file in java"}],"author":[{"name":{"$t":"pandu Brains"},"uri":{"$t":"https:\/\/plus.google.com\/116694047145069054119"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/4.bp.blogspot.com\/-tyuybPzBUdw\/U0DxqXq3naI\/AAAAAAAAAB4\/lDqm2nyD4sg\/s72-c\/xls+table.png","height":"72","width":"72"},"thr$total":{"$t":"0"}}]}});